{"ast":null,"code":"var _jsxFileName = \"D:\\\\ReactCourse\\\\useEffect\\\\01-starting-project\\\\src\\\\components\\\\Login\\\\Login.js\",\n  _s = $RefreshSig$();\nimport React, { useReducer, useState } from 'react';\nimport Card from '../UI/Card/Card';\nimport classes from './Login.module.css';\nimport Button from '../UI/Button/Button';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst emailReducer = (state, action) => {\n  if (action.type === \"EmailChanged\") {\n    return {\n      value: action.val,\n      isValid: action.val.includes('@')\n    };\n  }\n  if (action.val === \"EmailBlur\") {\n    return {\n      value: state.value,\n      isValid: state.value.includes('@')\n    };\n  }\n  return {\n    value: '',\n    isValid: false\n  };\n};\nconst passwordReducer = (state, action) => {\n  if (action.type === \"PasswordChanged\") {\n    return {\n      value: action.val,\n      isValid: action.val.trim().length > 6\n    };\n    if (action.val === \"PasswordBlur\") {\n      return {\n        value: state.value,\n        isValid: state.value.trim().length > 6\n      };\n    }\n    return {\n      value: '',\n      isValid: false\n    };\n  }\n};\nconst Login = props => {\n  _s();\n  //const [enteredEmail, setEnteredEmail] = useState('');\n  // const [emailIsValid, setEmailIsValid] = useState();\n  // const [enteredPassword, setEnteredPassword] = useState('');\n  // const [passwordIsValid, setPasswordIsValid] = useState();\n  const [formIsValid, setFormIsValid] = useState(false);\n  const [emailState, emailDispatch] = useReducer(emailReducer, {\n    value: '',\n    isValid: null\n  });\n  const [passwordState, passwordDispatch] = useReducer(passwordReducer, {\n    value: '',\n    isValid: null\n  });\n\n  // useEffect(() => {\n  //   const identifier = setTimeout(() => {\n  //     console.log('Checking form validity!');\n  //     setFormIsValid(\n  //       enteredEmail.includes('@') && enteredPassword.trim().length > 6\n  //     );\n  //   }, 500);\n\n  //   return () => {\n  //     console.log('CLEANUP');\n  //     clearTimeout(identifier);\n  //   };\n  // }, [enteredEmail, enteredPassword]);\n\n  const emailChangeHandler = event => {\n    emailDispatch({\n      type: \"EmailChanged\",\n      val: event.target.value\n    });\n    setFormIsValid(passwordState.value.trim().length > 6 && event.target.value.includes('@'));\n  };\n  const passwordChangeHandler = event => {\n    passwordDispatch({\n      type: \"EmailChanged\",\n      val: event.target.value\n    });\n    setFormIsValid(event.target.value.trim().length > 6 && emailState.includes('@'));\n  };\n  const validateEmailHandler = () => {\n    emailDispatch({\n      val: \"EmailBlur\"\n    });\n  };\n  const validatePasswordHandler = () => {\n    passwordDispatch({\n      val: \"PasswordBlur\"\n    });\n  };\n  const submitHandler = event => {\n    event.preventDefault();\n    props.onLogin(emailState.value, passwordState.value);\n  };\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: classes.login,\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: `${classes.control} ${emailState.isValid === false ? classes.invalid : ''}`,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: \"E-Mail\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          id: \"email\",\n          value: emailState.value,\n          onChange: emailChangeHandler,\n          onBlur: validateEmailHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `${classes.control} ${passwordState.isValid === false ? classes.invalid : ''}`,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"password\",\n          value: passwordState.value,\n          onChange: passwordChangeHandler,\n          onBlur: validatePasswordHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.actions,\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          className: classes.btn,\n          disabled: !formIsValid,\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 5\n  }, this);\n};\n_s(Login, \"k9aGM+tkEMaQePGf7Y/psSyU0gc=\");\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useReducer","useState","Card","classes","Button","jsxDEV","_jsxDEV","emailReducer","state","action","type","value","val","isValid","includes","passwordReducer","trim","length","Login","props","_s","formIsValid","setFormIsValid","emailState","emailDispatch","passwordState","passwordDispatch","emailChangeHandler","event","target","passwordChangeHandler","validateEmailHandler","validatePasswordHandler","submitHandler","preventDefault","onLogin","className","login","children","onSubmit","control","invalid","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","id","onChange","onBlur","actions","btn","disabled","_c","$RefreshReg$"],"sources":["D:/ReactCourse/useEffect/01-starting-project/src/components/Login/Login.js"],"sourcesContent":["import React, {  useReducer, useState } from 'react';\n\nimport Card from '../UI/Card/Card';\nimport classes from './Login.module.css';\nimport Button from '../UI/Button/Button';\n\nconst emailReducer=(state,action)=>{\n  if(action.type===\"EmailChanged\"){\n     return {value:action.val,\n      isValid : action.val.includes('@')}\n  }\n  if(action.val===\"EmailBlur\"){\n    return {\n      value:state.value,\n      isValid : state.value.includes('@')}\n  }\n  return {value:'',isValid:false}\n}\nconst passwordReducer=(state,action)=>{\n  if(action.type===\"PasswordChanged\"){\n     return {value:action.val,\n      isValid : action.val.trim().length > 6\n  }\n  if(action.val===\"PasswordBlur\"){\n    return {\n      value:state.value,\n      isValid : state.value.trim().length > 6}\n  }\n  return {value:'',isValid:false}\n}\n}\n\nconst Login = (props) => {\n  //const [enteredEmail, setEnteredEmail] = useState('');\n // const [emailIsValid, setEmailIsValid] = useState();\n  // const [enteredPassword, setEnteredPassword] = useState('');\n  // const [passwordIsValid, setPasswordIsValid] = useState();\n  const [formIsValid, setFormIsValid] = useState(false);\n\n  const[emailState,emailDispatch]=useReducer(emailReducer,{value:'',isValid:null})\n  const[passwordState,passwordDispatch]=useReducer(passwordReducer,{value:'',isValid:null})\n\n  // useEffect(() => {\n  //   const identifier = setTimeout(() => {\n  //     console.log('Checking form validity!');\n  //     setFormIsValid(\n  //       enteredEmail.includes('@') && enteredPassword.trim().length > 6\n  //     );\n  //   }, 500);\n\n  //   return () => {\n  //     console.log('CLEANUP');\n  //     clearTimeout(identifier);\n  //   };\n  // }, [enteredEmail, enteredPassword]);\n\n  const emailChangeHandler = (event) => {\n    emailDispatch({type:\"EmailChanged\", val:event.target.value})\n     setFormIsValid(\n         passwordState.value.trim().length > 6 && event.target.value.includes('@')\n       );\n    \n    \n  };\n\n  const passwordChangeHandler = (event) => {\n    passwordDispatch({type:\"EmailChanged\", val:event.target.value})\n    setFormIsValid(\n      event.target.value.trim().length > 6 && emailState.includes('@')\n    );\n    \n    \n  };\n\n  const validateEmailHandler = () => {\n    emailDispatch({val:\"EmailBlur\"})\n    \n\n  };\n\n  const validatePasswordHandler = () => {\n    passwordDispatch({val:\"PasswordBlur\"})\n  };\n\n  const submitHandler = (event) => {\n    event.preventDefault();\n    props.onLogin(emailState.value, passwordState.value);\n  };\n\n  return (\n    <Card className={classes.login}>\n      <form onSubmit={submitHandler}>\n        <div\n          className={`${classes.control} ${\n            emailState.isValid === false ? classes.invalid : ''\n          }`}\n        >\n          <label htmlFor=\"email\">E-Mail</label>\n          <input\n            type=\"email\"\n            id=\"email\"\n            value={emailState.value}\n            onChange={emailChangeHandler}\n            onBlur={validateEmailHandler}\n          />\n        </div>\n        <div\n          className={`${classes.control} ${\n            passwordState.isValid === false ? classes.invalid : ''\n          }`}\n        >\n          <label htmlFor=\"password\">Password</label>\n          <input\n            type=\"password\"\n            id=\"password\"\n            value={passwordState.value}\n            onChange={passwordChangeHandler}\n            onBlur={validatePasswordHandler}\n          />\n        </div>\n        <div className={classes.actions}>\n          <Button type=\"submit\" className={classes.btn} disabled={!formIsValid}>\n            Login\n          </Button>\n        </div>\n      </form>\n    </Card>\n  );\n};\n\nexport default Login;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}