{"ast":null,"code":"var _jsxFileName = \"D:\\\\ReactCourse\\\\01-starting-setup\\\\src\\\\Components\\\\NewExpense\\\\ExpenseFormContent.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ExpenseFormContent = () => {\n  _s();\n  const [enteredTitle, setTitle] = useState('');\n  const [enteredAmount, setAmount] = useState('');\n  const [enteredDate, setDate] = useState('');\n\n  //alternative for multiple states\n  // const [enteredInput,setInput]=useState({\n  //     title:'',\n  //     amount:'',\n  //     date:'',\n  // })\n  const changeTitleHandler = event => {\n    setTitle(event.target.value);\n    // setInput({\n    //     ...enteredInput,\n    //     title: event.target.value\n    // });\n    //alternative to above approach\n    //to get the previous state we should pass a fucnction to our set function and react will exceute it to get\n    //previous state below example shows it\n    // setInput((prevState)=>{\n    //   return {\n    //      ...prevState,\n    //    title: event.target.value\n    //}\n\n    //})\n    //console.log(event.target.value);\n  };\n\n  const changeAmountHandler = event => {\n    setAmount(event.target.value);\n    // setInput({\n    //     ...enteredInput,\n    //     amount: event.target.value\n    // });\n    //console.log(event.target.value);\n  };\n\n  const changeDateHandler = event => {\n    setDate(event.target.value);\n    // setInput({\n    //     ...enteredInput,\n    //     date: event.target.value\n    // });\n    //console.log(event.target.value);\n  };\n\n  const submitHandler = event => {\n    event.preventDefault();\n    const expenseData = {\n      title: enteredTitle,\n      amount: enteredAmount,\n      date: new Date(enteredDate)\n    };\n    props.onSaveExpenseData(expenseData);\n    setTitle('');\n    setAmount('');\n    setDate('');\n    //console.log(expenseData)    \n  };\n\n  /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: submitHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"new-expense__controls\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"new-expense__control\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: enteredTitle,\n          onChange: changeTitleHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"new-expense__control\",\n        onChange: changeAmountHandler,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Amount\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          value: enteredAmount,\n          min: \"0.01\",\n          step: \"0.01\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"new-expense__control\",\n        onChange: changeDateHandler,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Date\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"date\",\n          value: enteredDate,\n          min: \"2019-01-01\",\n          max: \"2022-12-31\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"new-expense__actions\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Add Expense\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n};\n_s(ExpenseFormContent, \"+UOXokHEnKMZSf1uZ3vQkjMEJlA=\");\n_c = ExpenseFormContent;\nexport default ExpenseFormContent;\nvar _c;\n$RefreshReg$(_c, \"ExpenseFormContent\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","ExpenseFormContent","_s","enteredTitle","setTitle","enteredAmount","setAmount","enteredDate","setDate","changeTitleHandler","event","target","value","changeAmountHandler","changeDateHandler","submitHandler","preventDefault","expenseData","title","amount","date","Date","props","onSaveExpenseData","onSubmit","children","className","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","min","step","max","_c","$RefreshReg$"],"sources":["D:/ReactCourse/01-starting-setup/src/Components/NewExpense/ExpenseFormContent.js"],"sourcesContent":["import React,{useState} from \"react\";\r\n\r\nconst ExpenseFormContent=()=>{\r\n    \r\n        const [enteredTitle,setTitle]= useState('');\r\n        const [enteredAmount,setAmount]= useState('');\r\n        const [enteredDate,setDate]= useState('');\r\n     \r\n     //alternative for multiple states\r\n     // const [enteredInput,setInput]=useState({\r\n     //     title:'',\r\n     //     amount:'',\r\n     //     date:'',\r\n     // })\r\n       const changeTitleHandler = (event) => {\r\n         setTitle(event.target.value)\r\n         // setInput({\r\n         //     ...enteredInput,\r\n         //     title: event.target.value\r\n         // });\r\n         //alternative to above approach\r\n         //to get the previous state we should pass a fucnction to our set function and react will exceute it to get\r\n         //previous state below example shows it\r\n        // setInput((prevState)=>{\r\n          //   return {\r\n           //      ...prevState,\r\n             //    title: event.target.value\r\n             //}\r\n     \r\n         //})\r\n         //console.log(event.target.value);\r\n       };\r\n       const changeAmountHandler = (event) => {\r\n         setAmount(event.target.value)\r\n         // setInput({\r\n         //     ...enteredInput,\r\n         //     amount: event.target.value\r\n         // });\r\n         //console.log(event.target.value);\r\n       };\r\n       const changeDateHandler = (event) => {\r\n         setDate(event.target.value)\r\n         // setInput({\r\n         //     ...enteredInput,\r\n         //     date: event.target.value\r\n         // });\r\n         //console.log(event.target.value);\r\n       };\r\n       const submitHandler=(event)=>{\r\n         event.preventDefault();\r\n             const expenseData= {\r\n                 \r\n                     title: enteredTitle,\r\n                     amount: enteredAmount,\r\n                     date: new Date(enteredDate)\r\n                 }\r\n                 props.onSaveExpenseData(expenseData)\r\n                 setTitle('')\r\n                 setAmount('')\r\n                 setDate('')\r\n         //console.log(expenseData)    \r\n       }\r\n    <form onSubmit={submitHandler}>\r\n    <div className=\"new-expense__controls\">\r\n      <div className=\"new-expense__control\">\r\n        <label>Name</label>\r\n        <input type=\"text\" value={enteredTitle} onChange={changeTitleHandler} />\r\n      </div>\r\n      <div className=\"new-expense__control\" onChange={changeAmountHandler}>\r\n        <label>Amount</label>\r\n        <input type=\"number\" value={enteredAmount} min=\"0.01\" step=\"0.01\" />\r\n      </div>\r\n      <div className=\"new-expense__control\" onChange={changeDateHandler}>\r\n        <label>Date</label>\r\n        <input type=\"date\" value={enteredDate} min=\"2019-01-01\" max=\"2022-12-31\" />\r\n      </div>\r\n    </div>\r\n    <div className=\"new-expense__actions\">\r\n      <button type=\"submit\">Add Expense</button>\r\n      <button type=\"submit\">Cancel</button>\r\n    </div>\r\n  </form>\r\n}\r\nexport default ExpenseFormContent;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}